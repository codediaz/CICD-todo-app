name: CI/CD
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  # Identificador Imagen Deployada en AWS
  DOCKER_REPO: 524390291345.dkr.ecr.us-east-1.amazonaws.com/todoapp-grupo3:latest

jobs:
  # Integración Continua
  ci:
    runs-on: ubuntu-latest

    steps:
      # Se descarga el código en el branch
      - name: Checkout
        uses: actions/checkout@v3
      # Instalar dependencias. | permite escribir varios comandos
      # Ejemplo: cd app && yarn install
      # Tambien se puede definir el directorio raiz:
      - name: Install dependences
        run: |
          yarn install
        # working-directory: ./app
      # Ejecutar Pruebas
      - name: Run test
        run: |
            npm test
  # Deploy Continuo
  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      # Se descarga el código en el branch
      - name: Checkout
        uses: actions/checkout@v3
      # Acceder a AWS usando el secreto AWS_IAM_ROLE
      - name: AWS authentication
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-duration-seconds: 1200
          role-session-name: ${{ github.sha }}
          aws-region: us-east-2
      # Logeo a la imagen ECR
      - name: Login AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      # Construir y Subir Imagen desde Docker
      - name: Docker build and push
        run: |
          docker build -t $DOCKER_REPO:${{ github.sha }} .
          docker push $DOCKER_REPO:${{ github.sha }}
      # Desplegar Imagen en EKS
      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name todoapp-grupo3
          kubectl set image deployment/to-do-app-deployment to-do-app=$DOCKER_REPO:${{ github.sha }}